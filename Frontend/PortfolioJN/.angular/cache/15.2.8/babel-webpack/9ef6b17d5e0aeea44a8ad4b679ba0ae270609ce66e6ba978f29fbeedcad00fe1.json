{"ast":null,"code":"import { Proyecto } from 'src/app/model/proyecto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/proyecto.service\";\nimport * as i2 from \"src/app/service/token.service\";\nimport * as i3 from \"@angular/router\";\nexport class ProyectosComponent {\n  constructor(proyectoS, tokenService, router) {\n    this.proyectoS = proyectoS;\n    this.tokenService = tokenService;\n    this.router = router;\n    this.proyecto = [];\n    this.isLogged = false;\n  }\n  ngOnInit() {\n    this.cargarProyecto();\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n    } else {\n      this.isLogged = false;\n    }\n  }\n  cargarProyecto() {\n    this.proyectoS.lista().subscribe(data => {\n      this.proyecto = data;\n    });\n  }\n  delete(id) {\n    if (id != undefined) {\n      this.proyectoS.delete(id).subscribe(data => {\n        this.cargarProyecto();\n      }, err => {\n        alert(\"No se pudo eliminar item de proyecto\");\n      });\n    }\n  }\n  onCreate() {\n    const proyecto = new Proyecto(this.nombre, this.descripcion, this.fecha, this.link);\n    this.proyectoS.save(proyecto).subscribe(data => {\n      alert(\"Proyecto creado correctamente\");\n      this.router.navigate(['']);\n    }, err => {\n      alert(\"Fallo la creacion de nuevo proyecto\");\n      this.router.navigate(['']);\n    });\n  }\n}\nProyectosComponent.ɵfac = function ProyectosComponent_Factory(t) {\n  return new (t || ProyectosComponent)(i0.ɵɵdirectiveInject(i1.ProyectoService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.Router));\n};\nProyectosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProyectosComponent,\n  selectors: [[\"app-proyectos\"]],\n  decls: 2,\n  vars: 0,\n  template: function ProyectosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"proyectos works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,wBAAwB;;;;;AASjD,OAAM,MAAOC,kBAAkB;EAQ7BC,YAAoBC,SAA0B,EAAUC,YAA0B,EAAUC,MAAc;IAAtF,cAAS,GAATF,SAAS;IAA2B,iBAAY,GAAZC,YAAY;IAAwB,WAAM,GAANC,MAAM;IANlG,aAAQ,GAAe,EAAE;IAQzB,aAAQ,GAAG,KAAK;EAF8F;EAM9GC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAG,IAAI,CAACH,YAAY,CAACI,QAAQ,EAAE,EAAC;MAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;KACrB,MAAM;MACL,IAAI,CAACA,QAAQ,GAAG,KAAK;;EAEzB;EAEAF,cAAc;IACZ,IAAI,CAACJ,SAAS,CAACO,KAAK,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAAC,IAAI,CAACC,QAAQ,GAAGD,IAAI;IAAA,CAAC,CAAC;EACjE;EAEAE,MAAM,CAACC,EAAU;IACf,IAAGA,EAAE,IAAIC,SAAS,EAAC;MACjB,IAAI,CAACb,SAAS,CAACW,MAAM,CAACC,EAAE,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;QAAE,IAAI,CAACL,cAAc,EAAE;MAAA,CAAC,EACnEU,GAAG,IAAG;QACJC,KAAK,CAAC,sCAAsC,CAAC;MAAE,CAAC,CACjD;;EAEL;EAEAC,QAAQ;IACN,MAAMN,QAAQ,GAAG,IAAIb,QAAQ,CAAE,IAAI,CAACoB,MAAM,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC;IACpF,IAAI,CAACpB,SAAS,CAACqB,IAAI,CAACX,QAAQ,CAAC,CAACF,SAAS,CAACC,IAAI,IAAG;MAC7CM,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACb,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,EAAER,GAAG,IAAG;MACPC,KAAK,CAAC,qCAAqC,CAAC;MAC5C,IAAI,CAACb,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACJ;;AA7CWxB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAyB;EAAAC;EAAAC;EAAAC;IAAA;MCX/BC,yBAAG;MAAAA,gCAAgB;MAAAA,iBAAI","names":["Proyecto","ProyectosComponent","constructor","proyectoS","tokenService","router","ngOnInit","cargarProyecto","getToken","isLogged","lista","subscribe","data","proyecto","delete","id","undefined","err","alert","onCreate","nombre","descripcion","fecha","link","save","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Practica\\PortfolioJN\\Frontend\\PortfolioJN\\src\\app\\components\\proyectos\\proyectos.component.ts","C:\\Practica\\PortfolioJN\\Frontend\\PortfolioJN\\src\\app\\components\\proyectos\\proyectos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Proyecto } from 'src/app/model/proyecto';\nimport { ProyectoService } from 'src/app/service/proyecto.service';\nimport { TokenService } from 'src/app/service/token.service';\n\n@Component({\n  selector: 'app-proyectos',\n  templateUrl: './proyectos.component.html',\n  styleUrls: ['./proyectos.component.css']\n})\nexport class ProyectosComponent implements OnInit {\n\n  proyecto: Proyecto[] = [];\n  nombre!: string;\n  descripcion!: string;\n  fecha!: string;\n  link!: string;\n\n  constructor(private proyectoS: ProyectoService, private tokenService: TokenService, private router: Router) { }\n\n  isLogged = false;\n\n\n\n  ngOnInit(): void {\n    this.cargarProyecto();\n    if(this.tokenService.getToken()){\n      this.isLogged = true;      \n    } else {\n      this.isLogged = false;\n    }\n  }\n\n  cargarProyecto(): void{\n    this.proyectoS.lista().subscribe(data =>{this.proyecto = data});\n  }\n\n  delete(id: number){\n    if(id != undefined){\n      this.proyectoS.delete(id).subscribe(data => {this.cargarProyecto()}, \n      err => {\n        alert(\"No se pudo eliminar item de proyecto\"); }\n      )\n    }\n  }\n\n  onCreate(): void{\n    const proyecto = new Proyecto (this.nombre, this.descripcion, this.fecha, this.link);\n    this.proyectoS.save(proyecto).subscribe(data =>{\n      alert(\"Proyecto creado correctamente\");\n      this.router.navigate(['']);\n    }, err =>{\n      alert(\"Fallo la creacion de nuevo proyecto\");\n      this.router.navigate(['']);\n    })\n  }\n\n\n}\n","<p>proyectos works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}