{"ast":null,"code":"import { Person } from 'src/app/model/person';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/person.service\";\nimport * as i2 from \"src/app/service/token.service\";\nimport * as i3 from \"@angular/router\";\nexport class ProfileComponent {\n  constructor(personS, tokenService, router) {\n    this.personS = personS;\n    this.tokenService = tokenService;\n    this.router = router;\n    this.person = [];\n    this.isLogged = false;\n  }\n  ngOnInit() {\n    this.cargarPerson();\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n    } else {\n      this.isLogged = false;\n    }\n  }\n  cargarPerson() {\n    this.personS.lista().subscribe(data => {\n      this.person = data;\n    });\n  }\n  delete(id) {\n    if (id != undefined) {\n      this.personS.delete(id).subscribe(data => {\n        this.cargarPerson();\n      }, err => {\n        alert(\"No se pudo borrar Persona\");\n      });\n    }\n  }\n  onCreate() {\n    const person = new Person(this.fullname, this.imgPerfil, this.posicion, this.ubicacion, this.contacto, this.interes, this.acercade);\n    this.personS.save(person).subscribe(data => {\n      alert(\"Persona creada correctamente\");\n      this.router.navigate(['']);\n    }, err => {\n      alert(\"Fallo la creacion de Persona\");\n      this.router.navigate(['']);\n    });\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.PersonService), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.Router));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 0,\n  vars: 0,\n  template: function ProfileComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,sBAAsB;;;;;AAS7C,OAAM,MAAOC,gBAAgB;EAY3BC,YAAoBC,OAAsB,EAAUC,YAA0B,EAAUC,MAAc;IAAlF,YAAO,GAAPF,OAAO;IAAyB,iBAAY,GAAZC,YAAY;IAAwB,WAAM,GAANC,MAAM;IAT9F,WAAM,GAAa,EAAE;IAWrB,aAAQ,GAAG,KAAK;EAF0F;EAM1GC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;IACnB,IAAG,IAAI,CAACH,YAAY,CAACI,QAAQ,EAAE,EAAC;MAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;KACrB,MAAM;MACL,IAAI,CAACA,QAAQ,GAAG,KAAK;;EAEzB;EAEAF,YAAY;IACV,IAAI,CAACJ,OAAO,CAACO,KAAK,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAAC,IAAI,CAACC,MAAM,GAAGD,IAAI;IAAA,CAAC,CAAC;EAC7D;EAEAE,MAAM,CAACC,EAAU;IACf,IAAGA,EAAE,IAAIC,SAAS,EAAC;MACjB,IAAI,CAACb,OAAO,CAACW,MAAM,CAACC,EAAE,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;QAAE,IAAI,CAACL,YAAY,EAAE;MAAA,CAAC,EAC/DU,GAAG,IAAG;QACJC,KAAK,CAAC,2BAA2B,CAAC;MACpC,CAAC,CACE;;EAEP;EAEAC,QAAQ;IACN,MAAMN,MAAM,GAAG,IAAIb,MAAM,CAAC,IAAI,CAACoB,QAAQ,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,QAAQ,CAAC;IACnI,IAAI,CAACvB,OAAO,CAACwB,IAAI,CAACd,MAAM,CAAC,CAACF,SAAS,CAACC,IAAI,IAAG;MAC1CM,KAAK,CAAC,8BAA8B,CAAC;MACrC,IAAI,CAACb,MAAM,CAACuB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC,EAAEX,GAAG,IAAG;MACPC,KAAK,CAAC,8BAA8B,CAAC;MACrC,IAAI,CAACb,MAAM,CAACuB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACF;;AAlDW3B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["Person","ProfileComponent","constructor","personS","tokenService","router","ngOnInit","cargarPerson","getToken","isLogged","lista","subscribe","data","person","delete","id","undefined","err","alert","onCreate","fullname","imgPerfil","posicion","ubicacion","contacto","interes","acercade","save","navigate","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Practica\\PortfolioJN\\Frontend\\PortfolioJN\\src\\app\\components\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Person } from 'src/app/model/person';\nimport { PersonService } from 'src/app/service/person.service';\nimport { TokenService } from 'src/app/service/token.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  person: Person[] = [];\n  fullname!: string;\n  imgPerfil!: string;\n  posicion!: string;\n  ubicacion!: string;\n  contacto!: string;\n  interes!: string;\n  acercade!: string;\n\n  constructor(private personS: PersonService, private tokenService: TokenService, private router: Router) { }\n\n  isLogged = false;\n\n\n\n  ngOnInit(): void {\n    this.cargarPerson();\n    if(this.tokenService.getToken()){\n      this.isLogged = true;      \n    } else {\n      this.isLogged = false;\n    }\n  }\n\n  cargarPerson(): void{\n    this.personS.lista().subscribe(data =>{this.person = data});\n  }\n  \n  delete(id: number){\n    if(id != undefined){\n      this.personS.delete(id).subscribe(data => {this.cargarPerson()},\n      err =>{\n        alert(\"No se pudo borrar Persona\");\n      }\n        )\n    }\n  }\n  \n  onCreate(): void{\n    const person = new Person(this.fullname, this.imgPerfil, this.posicion, this.ubicacion, this.contacto, this.interes, this.acercade);\n    this.personS.save(person).subscribe(data => {\n     alert(\"Persona creada correctamente\");\n     this.router.navigate(['']);\n  }, err => {\n    alert(\"Fallo la creacion de Persona\");\n    this.router.navigate(['']);\n  })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}